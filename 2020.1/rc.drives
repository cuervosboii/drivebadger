#!/bin/sh

/opt/drives/internal/delay.sh

perdev=`/opt/drives/internal/get-kali-persistent-partitions.sh |head -n 1`

if [ "$perdev" != "" ]; then
	target_partition=`basename $perdev`
	target_drive=`echo $target_partition |sed 's/[0-9]//g'`

	raw_device=`/opt/drives/internal/get-raw-device.sh $perdev`  # sdb3 or dm-0
	logger "persistent partition $perdev on device $raw_device"

	dt=`date +%Y%m%d`
	id=`/opt/drives/internal/get-computer-id.sh`
	remote_directory=/run/live/persistence/$target_partition/.files/.data/$dt
	target_directory=$remote_directory/$id

	mkdir -p $target_directory
	/opt/drives/internal/dump-debug-files.sh $target_directory

	for uuid in `ls /dev/disk/by-uuid`; do
		tmp=`readlink /dev/disk/by-uuid/$uuid`
		uuid_partition=`basename $tmp`  # dm-0 is handled properly below, but dm-1 etc. not - fix before reusing this code in different context
		uuid_drive=`echo $uuid_partition |sed 's/[0-9]//g'`

		if [ "$uuid_partition" = "$raw_device" ] || [ "$uuid_partition" = "$target_partition" ]; then
			logger "skipping UUID=$uuid (partition $uuid_partition matches target $target_partition)"
		elif [ "$uuid_drive" = "$target_drive" ]; then
			logger "skipping UUID=$uuid (partition $uuid_partition lays on the same target drive $target_drive as target partition $target_partition)"
		else
			fs=`/opt/drives/internal/get-partition-fs-type.sh $uuid_partition`
			if [ "$fs" = "swap" ]; then
				logger "skipping UUID=$uuid (swap partition $uuid_partition)"
			else
				drive_serial=`/opt/drives/internal/get-drive-serial.sh $uuid_drive $target_directory`
				src=/media/$uuid_partition/mnt
				subtarget=$target_directory/$drive_serial/${uuid_partition}_${fs}
				mkdir -p $src $subtarget

				# no specific support for encrypted drives (LUKS, loop-aes, Bitlocker etc.) - just raise an error here
				if mount -t $fs -o ro /dev/$uuid_partition $src >>$subtarget/rsync.log; then
					/opt/drives/internal/process-hooks.sh $src $remote_directory

					logger "copying UUID=$uuid (partition $uuid_partition filesystem $fs, mounted as $src, target directory $subtarget)"
					nohup /opt/drives/internal/rsync-partition.sh $src $subtarget >>$subtarget/rsync.log
				fi
			fi
		fi
	done

	logger "finished processing drives and partitions"
fi
